"use strict";var U=Object.defineProperty;var i=(o,e)=>U(o,"name",{value:e,configurable:!0});var T=require("child_process"),m=require("fs"),F=require("os"),S=require("path"),ne=require("module"),se=typeof document!="undefined"?document.currentScript:null;const N=class N{read(e){const t=m.readFileSync(S.resolve(__dirname,e),"utf-8");return JSON.parse(t)}};i(N,"ConfigReader");let w=N;const q=i(o=>Object.fromEntries(Object.entries(o).filter(([e,t])=>t!==void 0)),"removeUndefinedKeys");var g=i((o,e,t)=>new Promise((r,s)=>{var u=i(n=>{try{c(t.next(n))}catch(a){s(a)}},"fulfilled"),d=i(n=>{try{c(t.throw(n))}catch(a){s(a)}},"rejected"),c=i(n=>n.done?r(n.value):Promise.resolve(n.value).then(u,d),"step");c((t=t.apply(o,e)).next())}),"__async$1");const x="Content-Type",A="application/json",J="/v1/auth/universal-auth/login",L="/v3/secrets/raw",E=class E{constructor(e,t,r){this.apiUrl=e,this.clientId=t,this.clientSecret=r,this.token=void 0}getSecretsJson(e){return g(this,null,function*(){return(yield this.listSecrets(e)).reduce((s,u)=>(s[u.name]=u.value,s),{})})}getSecretsEnv(e){return g(this,null,function*(){return(yield this.listSecrets(e)).map(s=>`${s.name}=${JSON.stringify(s.value)}`).join(`
`)})}listSecrets(e){return g(this,null,function*(){const{projectId:t,environment:r,secretPath:s,tagSlugs:u}=e,c={method:"GET",headers:yield this.getAuthHeaders()},n=new URLSearchParams(q({workspaceId:t,environment:r,secretPath:s,tagSlugs:u,recursive:!0})).toString(),a=yield fetch(`${this.apiUrl}${L}?${n}`,c);if(!a.ok)throw new Error(`API error ${a.status}`);return(yield a.json()).secrets.map(l=>({name:l.secretKey,value:l.secretValue})).sort((l,f)=>l.name.localeCompare(f.name))})}login(){return g(this,null,function*(){const e={[x]:A},t={clientId:this.clientId,clientSecret:this.clientSecret},r={method:"POST",headers:e,body:JSON.stringify(t)},s=yield fetch(`${this.apiUrl}${J}`,r);if(!s.ok)throw new Error(`API error ${s.status}`);return(yield s.json()).accessToken})}getAuthHeaders(){return g(this,null,function*(){return this.token===void 0&&(this.token=yield this.login()),{Authorization:`Bearer ${this.token}`,"Content-Type":"application/json"}})}};i(E,"Infisical");let C=E;var b=require;const B=b("path"),$="\x1B[0m",H="\x1B[32m",K="\x1B[33m",M="\x1B[35m",D="\x1B[36m",G=i(o=>`${H}${o}${$}`,"green"),V=i(o=>`${K}${o}${$}`,"yellow"),z=i(o=>`${M}${o}${$}`,"magenta"),W=i(o=>`${D}${o}${$}`,"cyan"),I=class I{start(){this.info(""),this.info(z("=== Setup Dev Environment ==="))}runningNpmCommand(e){this.info(`Running NPM command ${V(e)}`)}writingEnvFile(e){const t="./"+B.relative(process.cwd(),e).replace(/\\/g,"/");this.info(`Writing file ${W(t)}`)}finish(){this.info("")}info(e){console.log(`setup ${G("info")} ${e}`)}};i(I,"Logger");let P=I;var Y=i((o,e,t)=>new Promise((r,s)=>{var u=i(n=>{try{c(t.next(n))}catch(a){s(a)}},"fulfilled"),d=i(n=>{try{c(t.throw(n))}catch(a){s(a)}},"rejected"),c=i(n=>n.done?r(n.value):Promise.resolve(n.value).then(u,d),"step");c((t=t.apply(o,e)).next())}),"__async");const k=S.resolve(__dirname,".secret"),Q=i(()=>m.existsSync(k)?m.readFileSync(k,"utf-8"):void 0,"readClientSecret"),X=i(o=>m.writeFileSync(k,o),"writeClientSecret"),Z=["Usage:","  node setup.cjs <INFISICAL_CLIENT_SECRET> - Set up the development environment"].join(F.EOL),ee=i(()=>Y(void 0,null,function*(){var o;const e=(o=process.argv[2])!=null?o:Q();if(e===void 0)return console.log(Z);const r=new w().read(S.resolve(__dirname,"config.json")),s=new P,u=new C(r.secrets.apiUrl,r.secrets.clientId,e);if(s.start(),r.npm!==void 0){const{registry:d,scopes:c}=r.npm,n=d.split("//")[1],{projectId:a,environment:v,secretPath:h,tags:l}=r.npm.secret,f=l.join(","),_=yield u.getSecretsJson({projectId:a,environment:v,secretPath:h,tagSlugs:f});s.runningNpmCommand(`npm config set "//${n}:_authToken" [Redacted]`),T.execSync(`npm config set "//${n}:_authToken" ${_.NPM_READ_TOKEN}`,{stdio:"inherit"});for(let p=0;p<c.length;p++)s.runningNpmCommand(`npm config set "${c[p]}:registry" ${d}`),T.execSync(`npm config set "${c[p]}:registry" ${d}`,{stdio:"inherit"})}if(r.packages!==void 0){const d={};for(let c=0;c<r.packages.length;c++){const n=r.packages[c];for(let l=0;l<n.secrets.length;l++){const{projectId:f,environment:_,secretPath:p,tags:R}=n.secrets[l],O=R.join(","),j=yield u.listSecrets({projectId:f,environment:_,secretPath:p,tagSlugs:O});for(let y=0;y<j.length;y++)d[j[y].name]=j[y].value}const v=Object.keys(d).sort().map(l=>`${l}=${JSON.stringify(d[l])}`).join(F.EOL),h=S.resolve(__dirname,n.filePath);s.writingEnvFile(h),m.writeFileSync(h,v)}}X(e),s.finish()}),"run");ee();
