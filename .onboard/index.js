"use strict";var x=Object.defineProperty;var r=(n,t)=>x(n,"name",{value:t,configurable:!0});var j=require("child_process"),m=require("fs"),_=require("os"),w=require("path"),ne=require("module"),se=typeof document!="undefined"?document.currentScript:null;const E=r(n=>Object.fromEntries(Object.entries(n).filter(([t,e])=>e!==void 0)),"removeUndefinedKeys");var v=r((n,t,e)=>new Promise((s,o)=>{var c=r(i=>{try{a(e.next(i))}catch(l){o(l)}},"fulfilled"),u=r(i=>{try{a(e.throw(i))}catch(l){o(l)}},"rejected"),a=r(i=>i.done?s(i.value):Promise.resolve(i.value).then(c,u),"step");a((e=e.apply(n,t)).next())}),"__async$1");const O="Content-Type",R="application/json",q="/v1/auth/universal-auth/login",A="/v3/secrets/raw",U=class U{constructor(t,e,s){this.apiUrl=t,this.clientId=e,this.clientSecret=s,this.token=void 0}getSecretsJson(t){return v(this,null,function*(){return(yield this.listSecrets(t)).reduce((o,c)=>(o[c.name]=c.value,o),{})})}getSecretsEnv(t){return v(this,null,function*(){return(yield this.listSecrets(t)).map(o=>`${o.name}=${JSON.stringify(o.value)}`).join(_.EOL)})}listSecrets(t){return v(this,null,function*(){const{projectId:e,environment:s,secretPath:o,tagSlugs:c}=t,a={method:"GET",headers:yield this.getAuthHeaders()},i=new URLSearchParams(E({workspaceId:e,environment:s,secretPath:o,tagSlugs:c,recursive:!0})).toString(),l=yield fetch(`${this.apiUrl}${A}?${i}`,a);if(!l.ok)throw new Error(`API error ${l.status}`);return(yield l.json()).secrets.map(f=>({name:f.secretKey,value:f.secretValue})).sort((f,y)=>f.name.localeCompare(y.name))})}login(){return v(this,null,function*(){const t={[O]:R},e={clientId:this.clientId,clientSecret:this.clientSecret},s={method:"POST",headers:t,body:JSON.stringify(e)},o=yield fetch(`${this.apiUrl}${q}`,s);if(!o.ok)throw new Error(`API error ${o.status}`);return(yield o.json()).accessToken})}getAuthHeaders(){return v(this,null,function*(){return this.token===void 0&&(this.token=yield this.login()),{Authorization:`Bearer ${this.token}`,"Content-Type":"application/json"}})}};r(U,"Infisical");let N=U;var L=require;const b=L("path"),C="\x1B[0m",J="\x1B[32m",B="\x1B[33m",H="\x1B[35m",K="\x1B[36m",M=r(n=>`${J}${n}${C}`,"green"),G=r(n=>`${B}${n}${C}`,"yellow"),V=r(n=>`${H}${n}${C}`,"magenta"),W=r(n=>`${K}${n}${C}`,"cyan"),z=r(n=>`'${n}'`,"quote"),I=class I{start(){this.info(""),this.info(V("=== Setting Up ==="))}runningNpmCommand(t){this.info(`Running NPM command ${G(t)}`)}fileCreated(t){const e=this.formatPath(t);this.info(`${e} created`)}fileUpdated(t){const e=this.formatPath(t);this.info(`${e} updated`)}fileUnchanged(t){const e=this.formatPath(t);this.info(`${e} unchanged`)}finish(){this.info("")}formatPath(t){const e=b.relative(process.cwd(),t).replace(/\\/g,"/"),s=e.startsWith("./")||e.startsWith("../")?"":"./";return W(z(s+e))}info(t){console.log(`onboard ${M("info")} ${t}`)}};r(I,"Logger");let F=I;const D=r(()=>j.execSync("npm config get userconfig",{encoding:"utf8"}).trim(),"getNpmConfigFile"),T=r(n=>m.existsSync(n)?m.readFileSync(n,"utf-8"):null,"safeReadFileSync");var Y=r((n,t,e)=>new Promise((s,o)=>{var c=r(i=>{try{a(e.next(i))}catch(l){o(l)}},"fulfilled"),u=r(i=>{try{a(e.throw(i))}catch(l){o(l)}},"rejected"),a=r(i=>i.done?s(i.value):Promise.resolve(i.value).then(c,u),"step");a((e=e.apply(n,t)).next())}),"__async");const k=w.resolve(__dirname,".secret"),Q=r(()=>m.existsSync(k)?m.readFileSync(k,"utf-8"):void 0,"readClientSecret"),X=r(n=>m.writeFileSync(k,n),"writeClientSecret"),Z=["Usage:","  node index.js <INFISICAL_CLIENT_SECRET> - Set up the development environment"].join(_.EOL),ee=r(()=>Y(void 0,null,function*(){var n;const t=(n=process.argv[2])!=null?n:Q();if(t===void 0)return console.log(Z);const e=JSON.parse(m.readFileSync(w.resolve(__dirname,"config.json"),"utf-8")),s=new F,o=new N(e.secrets.apiUrl,e.secrets.clientId,t);if(s.start(),e.npm!==void 0){const{registry:c,scopes:u}=e.npm,a=c.split("//")[1],{projectId:i,environment:l,secretPath:g,tags:d}=e.npm.secret,f=d.join(","),y=yield o.getSecretsJson({projectId:i,environment:l,secretPath:g,tagSlugs:f}),h=D(),S=T(h);s.runningNpmCommand(`npm config set "//${a}:_authToken" [Redacted]`),j.execSync(`npm config set "//${a}:_authToken" ${y.NPM_READ_TOKEN}`,{stdio:"inherit"});for(let p=0;p<u.length;p++)s.runningNpmCommand(`npm config set "${u[p]}:registry" ${c}`),j.execSync(`npm config set "${u[p]}:registry" ${c}`,{stdio:"inherit"});S===null?s.fileCreated(h):T(h)===S?s.fileUnchanged(h):s.fileUpdated(h)}if(e.packages!==void 0){const c={};for(let u=0;u<e.packages.length;u++){const a=e.packages[u];for(let d=0;d<a.secrets.length;d++){const{projectId:f,environment:y,secretPath:h,tags:S}=a.secrets[d],p=S.join(","),P=yield o.listSecrets({projectId:f,environment:y,secretPath:h,tagSlugs:p});for(let $=0;$<P.length;$++)c[P[$].name]=P[$].value}const l=Object.keys(c).sort().map(d=>`${d}=${JSON.stringify(c[d])}`).join(_.EOL),g=w.resolve(__dirname,a.filePath);s.fileCreated(g),m.writeFileSync(g,l)}}X(t),s.finish()}),"run");ee();
